<?php

namespace AHT\Attribute\Block\Agent;

class Report extends \Magento\Backend\Block\Template
{
    protected $agentFactory;
    protected $customerRepositoryInterface;
    protected $productRepository;

    public function __construct
    (
        \AHT\Attribute\Model\AgentFactory $agentFactory,
        \Magento\Customer\Api\CustomerRepositoryInterface $customerRepositoryInterface,
        \Magento\Catalog\Api\ProductRepositoryInterface $productRepository,
        \Magento\Backend\Block\Template\Context $context,
        array $data = []
    )
    {
        $this->agentFactory = $agentFactory;
        $this->customerRepositoryInterface = $customerRepositoryInterface;
        $this->productRepository = $productRepository;
        parent::__construct($context, $data);
    }

    public function getSalesAgent()
    {
        $salesAgent = $this->agentFactory->create()->getCollection();
        $filter = $this->getParams();
        if(isset($filter['agent_email']) && !isset($filter['order_item_sku'])){
            $salesAgent = $salesAgent->addFieldToFilter('agent_id',['eq' => $filter['agent_email']]);
        }else if (isset($filter['agent_email']) && isset($filter['order_item_sku'])){
            $salesAgent = $salesAgent->addFieldToFilter('agent_id',['eq' => $filter['agent_email']]);
        }else if (!isset($filter['agent_email']) && isset($filter['order_item_sku'])){
            $salesAgent = $salesAgent->addFieldToFilter('agent_id',['eq' => $filter['agent_email']]);
        }
        $sql = $salesAgent->getSelect()->__toString();
        foreach($salesAgent as $item){

            $customer = $this->customerRepositoryInterface->getById($item->getAgentId());
            $product = $this->productRepository->get($item->getOrderItemSku());
            $data[] = [
                'id' => $item->getEntityId(),
                'order_id' => $item->getOrderId(),
                'agent_id' => $item->getAgentId(),
                'agent_name' => $customer->getFirstname().' '.$customer->getLastname(),
                'order_item_sku' => $item->getOrderItemSku(),
                'order_item_name' => $product->getName(),
                'order_item_price' => $item->getOrderItemPrice(),
                'commision_type' => $item->getCommisionType(),
                'commision_value' => $item->getCommisionValue(),
            ];
        }

        return $data;
    }

    public function getParams()
    {
        return $this->getRequest()->getParams();
    }

    protected function _prepareLayout()
    {
        return parent::_prepareLayout(); // TODO: Change the autogenerated stub
    }
}
